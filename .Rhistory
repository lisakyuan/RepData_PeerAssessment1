svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[, 1:2]
svd2$d
subdata <- InsectSprays[InsectSprays$spray %in% c("B", "C"),]
dim(subdata)
y <- subdata$count
y
group <- as.character(subdata$spray)
group
testStat <- function(w, g) mean(w[g == "B"]) -mean(w[g == "C"])
observedStat <- testStat(y, group)
permutations <- sapply(1:10000, function(i) testStat(y, sample(group)))
observedStat
library(swirl)
rm(list=ls())
install_from_swirl("Statistical Inference")
swirl()
1*1/6 + 2*1/6 + 3* 1/6+ 4*1/6 + 5*1/6 + 6*1/6
print(g2)
head(sh)
ng
nh
median(resampledMedians)
median(sh)
sample(fh, size=nh*B, replace=TRUE)
sam <- sample(fh, size=nh*B, replace=TRUE)
resam <- matrix(sam, row=B, col=nh)
resam <- matrix(sam)
resame <- matrix(sam, B, nh)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, fun=median)
meds <- apply(resam, 1, FUN=median)
medidan(fh) - meds
meds - median(meds)
median(fh)-median(meds)
sd(meds)
sd(resampleMedians)
sd(resampledMedians)
quantile(resampledMedians, c(.25, .975))
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(gourp)))
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
testStat(DEcounts, group)
perms <- sapply(1:10000, function(i) testStat(DEconunts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
library(datasets)
data(mtcars)
head(mpg)
head(mtcars)
avgMpg <- mean(mtcars$mpg)
avgMpg
attach(mtcars)
mean(mpg)
t.test(mpg)
t.test(mpg)$conf.int
round(t.test(mpg)$conf.int)
s <- sd(mpg)
z <- qnorm(.05)
mu0 <- mean(mpg) - z*s/sqrt(nrow(mtcars))
mu0
m4 <- mean(subset(mtcars[cyl==4])$mpg)
c4 =mtcars$mpg[mtcars$cyl == 4]
c6 = mtcars$mpg[mtcars$cyl == 6]
t.test(c4,c6, Var.equal=TRUE)
n < 100
n <- 100
mu <- 3.0
sd <- 1.1
mu + c(-1,1)*qnorm(.975)*(sd/sqrt(n))
pbinom(54, size=100, prob = .05, lower.tail = FALSE)
pbinom(54, size=100, prob = .5, lower.tail = FALSE)
ppois(15800-1, lambda = 520*30)
ppois(15800-1, lambda = 520*30, lower.tail = FALSE)
mu1 <= 10
mu1 <- 10
mu2<- 11
dif = 10-11
sp <- 4
se <- 4 * sqrt(1/100 + 1/100)
z <- (dif-0)/se
z
pnorm(z)
2*pnorm(z)
10 + 1.645 * 4/10
pnorm(10.658, mean=11, sd = 4, lower.tail=FALSE)
pnorm(10.658, mean=11, sd = .4, lower.tail=FALSE)
mu <- 0.01
sd <- 0.04
1.645 * 0.04
n  = 10
pnorm(0.0658/sqrt(n), mean = 0.04, sd = 0.04/sqrt(n), lower.tail = FALSE)
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 1000
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 500
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 250
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 250
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 100
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 98
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 99
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
head(mtcars)
library dplyr
library(dplyr)
c6 <- mtcars %>% filter (cyl == 6)
c8 <- mtcars %>% filter (cyl == 8)
t.test(c6$mpg, c8$mpg, var.equal=TRUE)
2 * pnorm(-4.419)
mn6 <- mean(c6$mpg)
mn8 <- mean(c8$mpg)
sd6 <- sd(c6$mpg)
sd8 <- sd(c8$mpg)
n6 <- nrow(c6)
n8 <- nrow(c8)
n6 <- length(c6)
n8 <- length(c8)
sp <- sqrt(((n6-1) * sd6^2 + (n8-1) * sd8^2)/(n6 + n8 -2))
c6
length(c6$mpg)
n6 <- length(c6$mpg)
n8 <- length(c8$mpg)
sp <- sqrt(((n6-1) * sd6^2 + (n8-1) * sd8^2)/(n6 + n8 -2))
length(c8)
length(c8$mpg)
c8
sp
ts <- (mn6 - mn8)/(sp*sqrt(1/n1+1/n2))
ts <- (mn6 - mn8)/(sp*sqrt(1/n6+1/n8))
ts
mn1 <- mean(140, 138, 150, 148, 135)
mn2 <- mean(132, 135, 151, 146, 130)
base <- 132, 135, 151, 146, 130
base <- c(132, 135, 151, 146, 130)
base <- c(140, 138, 150, 148, 135)
week2 <- c(132, 135, 151, 146, 130)
t.test(base, week2, mu = mn1, paired=TRUE)
t.test(base, week2, mu = mn1, paired=TRUE,var.equal=T, alt="two.sided")
t.test(base, week2, paired=TRUE,var.equal=T, alt="two.sided")$p,value
t.test(base, week2, paired=TRUE,var.equal=T, alt="two.sided")$p.value
n <- 9
mn <- 1100
sd <- 30
t <- qt((1-0.05)/2, n-1)
mu + c(-1,1)*t*sd/sqrt(n)
mn + c(-1,1)*t*sd/sqrt(n)
t <- qt(1-0.05/2, n-1)
mn + c(-1,1)*t*sd/sqrt(n)
pbinom(2, size=4, prob = .5, lower.tail=F)
ppois(10, 1/100*1787)
n1 <- 9
n2 <- 9
mn_t <- -3
mn_p <- 1.8
mn_p <- 1
sd_t <- 1.5
sd_p <- 1.8
sp <- ((n1-1) * sd_t^2 + (n2-1)*sd_p^2)/(n1+n2-2)
sp
ts <- (mn_t-mn_p)/sp*sqrt(1/n1+1/n2)
tx
ts
qnorm(ts)
pnorm(ts)
p <- 2*pt(ts, df = 16)
p
sp <- (n1 * sd_t^2 + n2*sd_p^2)/(n1+n2-2)
ts <- (mn_t - mn_p)/sqrt(sp/n1 + sp/n2)
ts
p <- 2*pt(ts, df = 16)
p
n <- 100
mn1 <- 0.01
sd <- 0.04
power.t.test(n, delta=mn1, sd=sd, type="one.sample", alt="one.sided")$power
power <- 0.9
power.t.test(power=power, delta=mn1, sd=sd, type="one.sample", alt="one.sided")$n
getwd()
install.packages("gapminder")
library(gapminder)
library(dplyr)
gapminder
library(ggplot2)
ggplot(gapminder, aes(year, lifeExp)) + geom_line(aes(group=country))
dim(gapminder)
by_country <- gapminder %>% group_by(continent, country) %>% nest()
install.packages("tidyr")
by_country <- gapminder %>% group_by(continent, country) %>% nest()
?tidyr
library(tidyr)
by_country <- gapminder %>% group_by(continent, country) %>% nest()
by_country
getwd()
setwd("C:/Users/Lisa/version-control/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", header = TRUE, colClasses = c(date = "Date"))
library(dplyr)
library(ggplot2)
library(scales)
steps_day <- aggregate(steps ~ date, data=activity, na.rm=FALSE, FUN = sum)
ggplot(data=steps_day, aes(steps)) +
geom_histogram(fill="orange", col = "black", binwidth=500) +
ggtitle("Distribution of Daily Total Number Steps") +
xlab("Total Number of Steps per Day") +
ylab("Frequency (Number of Days")
step_mean <- mean(steps_day$steps)
print step_mean
print(step_mean)
print(step_median)
step_median <- median(steps_day$steps)
print(step_median)
avg_steps_per_interval <- activity %>% group_by(interval) %>% summarise(avg_steps = mean(steps, na.rm=TRUE))
with(avg_steps_per_interval, plot(strptime(sprintf("%04d", interval), format="%H%M"), y=avg_steps, type="l",
col = "red",
main="Time Series Plot of Steps Taken in 5-Minute Intervals, Average Cross All Days",
xlab="Time of Day (HH:MM)",
ylab="Average number steps"))
with(avg_steps_per_interval, plot(strptime(sprintf("%04d", interval), format="%H%M"), y=avg_steps, type="l",
col = "red",
main="Time Series Plot of Steps Taken in 5-Minute Intervals, Average Cross All Days",
xlab="Time of Day (HH:MM)",
ylab="Average number of steps"))
abline(h=mean(avg_steps_per_interval$steps, na.rm=T), col="blue")
with(avg_steps_per_interval, plot(strptime(sprintf("%04d", interval), format="%H%M"), y=avg_steps, type="l",
col = "red",
main="Time Series Plot of Steps Taken in 5-Minute Intervals, Average Cross All Days",
xlab="Time of Day (HH:MM)",
ylab="Average number of steps"))
abline(h=mean(avg_steps_per_interval$steps, na.rm=TRUE), col="blue")
with(avg_steps_per_interval, plot(strptime(sprintf("%04d", interval), format="%H%M"), y=avg_steps, type="l",
col = "red",
main="Time Series Plot of Steps Taken in 5-Minute Intervals, Average Cross All Days",
xlab="Time of Day (HH:MM)",
ylab="Average number of steps"))
abline(h=mean(avg_steps_per_interval$avg_steps, na.rm=TRUE), col="blue")
max_interval <- filter(avg_steps_per_interval, avg_steps == max(avg_steps))
print max_interval
print(max_interval)
max_interval <- filter(avg_steps_per_interval, avg_steps == round(max(avg_steps)))
print(max_interval)
print(max_interval)
max_interval <- filter(avg_steps_per_interval, avg_steps == max(avg_steps))
print(max_interval)
sum(is.na(activity$steps))
activity.filled  <- inner_join(activity, avg_steps_per_interval, by = "interval") %>%
mutate(steps=ifelse(is.na(steps), round(avg_steps), steps)) %>%
select(date, steps, interval)
steps_day_filled <- aggregate(steps ~ date, data=activity.filled, FUN=sum)
head(steps_day_filled)
summary(steps_day_filled)
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black")+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency")
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency")
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency") + abline(h=mean(steps_day_filled$steps))
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency") + geom_hline(aes(mean(steps_day_filled$steps))
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency") + geom_hline(aes(mean(steps_day_filled$steps)))
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency") + geom_hline(aes(mean(steps_day_filled$steps)))
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency") + geom_hline(aes(yintercept=mean(steps_day_filled$steps)), col = "red")
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency")
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency") + geom_vline(aes(xintercept=mean(steps_day_filled$steps)), col = "red")
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Total number of steps taken each day") + xlab("Total steps taken each day") + ylab("Frequency") + geom_vline(aes(xintercept=mean(steps_day_filled$steps)), col = "red", lwd=2)
mean(steps_day_filled$steps)
median(steps_day_filled$steps)
step_mean <- mean(steps_day$steps)
print(step_mean)
print(step_median)
activity_new <- activity.filled%>%mutate(daytype=as.factor(ifelse(weekdays(date)
%in% c("Saturday", "Sunday"), "weekend", "weekday")))
activity_new_interval <- aggregate(steps ~ interval + daytype, activity_new, mean)
head(activity_new)
head(activity_new_interval)
names(activity_new_interval$steps) <- 'avg_steps'
head(activity_new_interval)
activity_new_interval <- rename(activity_new_interval, c("steps" = "avg_steps"))
rename(activity_new_interval, avg_steps = steps)
head(activity_new_interval)
rename(activity_new_interval, "steps", "avg_steps")
rename(activity_new_interval, avg_steps = steps)
rename(activity_new_interval, avg_steps = steps)
head(activity_new_interval)
str(activity_new_interval)
activity_new_interval %>% rename(activity_new_interval, avg_steps = steps)
names(activity_new_interval)[names(activity_new_interval) == "steps"] <- "avg_steps"
head(activity_new_interval)
ggplot(data=activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
ggplot(data=activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
library(scales)
ggplot(activity_new_interval, aes(strptime(sprintf("%00d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
head(activity_new_interval)
strptime(sprintf("%04d", 0))
strptime(sprintf("%04d", 0), format="%H%M")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
with(avg_steps_per_interval, plot(strptime(sprintf("%04d", interval), format="%H%M"), y=avg_steps, type="l",
col = "red",
main="Time Series Plot of Steps Taken in 5-Minute Intervals, Average Cross All Days",
xlab="Time of Day (HH:MM)",
ylab="Average number of steps"))
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line()
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M"), breaks = date_breaks("1 hour")) +
scale_y_continuous("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M"), breaks = date_breaks("1 hour"))
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M"),
breaks = date_breaks("2 hour")) +
scale_y_continuous("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
xlab("Time of the Day "H:M") +
ylab("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
xlab("Time of the Day "H:M") +
ylab("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
xlab("Time of the Day (H:M)") +
ylab("Average Steps Taken")
with(avg_steps_per_interval, plot(strptime(sprintf("%04d", interval), format="%H%M"), y=avg_steps, type="l",
col = "red",
main="Time Series Plot of Steps Taken in 5-Minute Intervals, Average Cross All Days",
xlab="Time of Day (HH:MM)",
ylab="Average number of steps"))
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
xlab("Time of the Day (H:M)") +
ylab("Average Steps Taken")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M"),
breaks = date_breaks("2 hour")) +
scale_y_continuous("Average Number of Steps")
xlab("Time of the Day (H:M)")
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M"),
breaks = date_breaks("2 hour")) +
xlim(0,23)
ggplot(activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M"), avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend")
head(activity_new_interval$interval)
ggplot(activity_new_interval, aes(interval, avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Intervals") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
ylab("Average Steps for 5 Minute Interval")
ggplot(data=steps_day, aes(steps)) +
geom_histogram(fill="orange", col = "black", binwidth=500) +
ggtitle("Distribution of Daily Total Number Steps") +
xlab("Total Number of Steps per Day") +
ylab("Frequency (Number of Days")
str(activity)
summary(activity)
activity <- read.csv("activity.csv", header = TRUE, colClasses = c(date = "Date"))
library(dplyr)
library(ggplot2)
steps_day <- aggregate(steps ~ date, data=activity, na.rm=FALSE, FUN = sum)
ggplot(data=steps_day, aes(steps)) +
geom_histogram(fill="orange", col = "black", binwidth=500) +
ggtitle("Distribution of Daily Total Number Steps") +
xlab("Total Number of Steps per Day") +
ylab("Frequency (Number of Days")
avg_steps_per_interval <- activity %>% group_by(interval) %>% summarise(avg_steps = mean(steps, na.rm=TRUE))
with(avg_steps_per_interval, plot(strptime(sprintf("%04d", interval), format="%H%M"), y=avg_steps, type="l",
col = "red",
main="Time Series Plot of Steps Taken in 5-Minute Intervals, Average Cross All Days",
xlab="Time of Day (HH:MM)",
ylab="Average number of steps"))
abline(h=mean(avg_steps_per_interval$avg_steps, na.rm=TRUE), col="blue")
activity.filled  <- inner_join(activity, avg_steps_per_interval, by = "interval") %>%
mutate(steps=ifelse(is.na(steps), round(avg_steps), steps)) %>%
select(date, steps, interval)
steps_day_filled <- aggregate(steps ~ date, data=activity.filled, FUN=sum)
ggplot(data=steps_day_filled, aes(steps))+geom_histogram(fill="orange", col="black", binwidth = 500)+
ggtitle("Histogram of Daily Steps (With NA Value Filled)") + xlab("Total steps taken each day") + ylab("Frequency") + geom_vline(aes(xintercept=mean(steps_day_filled$steps)), col = "red", lwd=2)
activity_new <- activity.filled%>%mutate(daytype=as.factor(ifelse(weekdays(date)
%in% c("Saturday", "Sunday"), "weekend", "weekday")))
activity_new_interval <- aggregate(steps ~ interval + daytype, activity_new, mean)
names(activity_new_interval)[names(activity_new_interval) == "steps"] <- "avg_steps"
ggplot(activity_new_interval, aes(interval, avg_steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Intervals") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
ylab("Average Steps for 5 Minute Interval")
